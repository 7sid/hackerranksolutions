import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the isBalanced function below.
    static String isBalanced(String s) {
        boolean flag = true;
       int n =s.length();
        if(n%2!=0)
            return "NO";
        else
        {
            int i=0;
        Stack <Character> stack = new Stack();
                while(n>i)
                {
                    char c = s.charAt(i);
                    if(c=='{' || c=='[' || c=='(')
                        stack.push(c);
                    else
                        if ((c=='}'||c==']'||c==')') && stack.isEmpty())
                                return "NO";
                            
                            else if(c=='}'&& stack.peek()=='{')
                            stack.pop();
                        else if(c==']'&& stack.peek()=='[')
                            stack.pop();
                        else if (c==')'&& stack.peek()=='(')
                            stack.pop();
                        else 
                            return "NO";
                    i++;
                }
            
            if(!stack.isEmpty())
                return "NO";
        }     
         return "YES";   
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int t = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int tItr = 0; tItr < t; tItr++) {
            String s = scanner.nextLine();

            String result = isBalanced(s);

            bufferedWriter.write(result);
            bufferedWriter.newLine();
        }

        bufferedWriter.close();

        scanner.close();
    }
}
